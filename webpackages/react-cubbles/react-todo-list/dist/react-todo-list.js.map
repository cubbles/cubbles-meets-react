{"version":3,"sources":["../src/react-todo-list.js"],"names":["ListItem","props","item","id","done","e","onClickCallback","index","value","React","Component","TodoList","listItems","items","forEach","idx","push","itemClickCallback","renderList","CubxPolymer","is","cubxReady","_cubxReady","_render","modelItemsChanged","_toggleItemState","getItems","setItems","ReactDOM","render","model","bind","document","querySelector","getRuntimeId"],"mappings":";;;;;;;;;;AAAC,aAAY;AACX;;AAEA;;AAHW,MAILA,QAJK;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAKC;AAAA;;AACR,eACE;AAAA;AAAA;AACE,yCAAO,IAAI,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,EAA3B;AACE,kBAAK,UADP;AAEE,qBAAS,KAAKF,KAAL,CAAWC,IAAX,CAAgBE,IAF3B;AAGE,sBAAU,kBAACC,CAAD;AAAA,qBAAO,OAAKJ,KAAL,CAAWK,eAAX,CAA2B,OAAKL,KAAL,CAAWM,KAAtC,EAA6CF,CAA7C,CAAP;AAAA,aAHZ,GADF;AAKE;AAAA;AAAA,cAAO,SAAS,KAAKJ,KAAL,CAAWC,IAAX,CAAgBC,EAAhC;AAAqC,iBAAKF,KAAL,CAAWC,IAAX,CAAgBM;AAArD;AALF,SADF;AASD;AAfQ;;AAAA;AAAA,IAIYC,MAAMC,SAJlB;;AAAA,MAkBLC,QAlBK;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,mCAmBK;AAAA;;AACZ,YAAIC,YAAY,EAAhB;AACA,aAAKX,KAAL,CAAWY,KAAX,CAAiBC,OAAjB,CAAyB,UAACZ,IAAD,EAAOa,GAAP,EAAe;AACtCH,oBAAUI,IAAV,CAAe,oBAAC,QAAD,IAAU,KAAKd,KAAKC,EAApB,EAAwB,MAAMD,IAA9B,EAAoC,iBAAiB,OAAKD,KAAL,CAAWgB,iBAAhE,EAAmF,OAAOF,GAA1F,GAAf;AACD,SAFD;AAGA,eAAO;AAAA;AAAA;AAAKH;AAAL,SAAP;AACD;AAzBQ;AAAA;AAAA,+BA2BC;AACR,eACE;AAAA;AAAA;AAAM,eAAKM,UAAL;AAAN,SADF;AAGD;AA/BQ;;AAAA;AAAA,IAkBYT,MAAMC,SAlBlB;;AAkCX;;;AACAS,cAAY;AACVC,QAAI,iBADM;;AAGVC,eAAW,qBAAY;AACrB,WAAKC,UAAL,GAAkB,IAAlB;AACA,WAAKC,OAAL;AACD,KANS;;AAQVC,uBAAmB,6BAAY;AAC7B,WAAKF,UAAL,GAAkB,KAAKC,OAAL,EAAlB,GAAmC,IAAnC;AACD,KAVS;;AAYVE,sBAAkB,0BAAUlB,KAAV,EAAiB;AACjC,UAAIM,QAAQ,KAAKa,QAAL,EAAZ;AACAb,YAAMN,KAAN,EAAaH,IAAb,GAAoB,CAACS,MAAMN,KAAN,EAAaH,IAAlC;AACA,WAAKuB,QAAL,CAAcd,KAAd;AACD,KAhBS;;AAkBVU,aAAS,mBAAY;AACnBK,eAASC,MAAT,CAAgB,oBAAC,QAAD,IAAU,OAAO,KAAKC,KAAL,CAAWjB,KAA5B,EAAmC,mBAAmB,KAAKY,gBAAL,CAAsBM,IAAtB,CAA2B,IAA3B,CAAtD,GAAhB,EAA2GC,SAASC,aAAT,CAAuB,kBAAkB,KAAKC,YAAL,EAAlB,GAAwC,IAA/D,CAA3G;AACD;AApBS,GAAZ;AAsBD,CAzDA,GAAD","file":"react-todo-list.js","sourcesContent":["(function () {\n  'use strict';\n\n  // Define your React Components\n  class ListItem extends React.Component {\n    render () {\n      return (\n        <li>\n          <input id={this.props.item.id}\n            type=\"checkbox\"\n            checked={this.props.item.done}\n            onChange={(e) => this.props.onClickCallback(this.props.index, e)}/>\n          <label htmlFor={this.props.item.id}>{this.props.item.value}</label>\n        </li>\n      );\n    }\n  }\n\n  class TodoList extends React.Component {\n    renderList () {\n      var listItems = [];\n      this.props.items.forEach((item, idx) => {\n        listItems.push(<ListItem key={item.id} item={item} onClickCallback={this.props.itemClickCallback} index={idx}/>);\n      });\n      return <ul>{listItems}</ul>;\n    }\n\n    render () {\n      return (\n        <div>{this.renderList()}</div>\n      );\n    }\n  }\n\n  // Call CubxPolymer Factory Method for registiering <react-todo-list> Cubbles Component\n  CubxPolymer({\n    is: 'react-todo-list',\n\n    cubxReady: function () {\n      this._cubxReady = true;\n      this._render();\n    },\n\n    modelItemsChanged: function () {\n      this._cubxReady ? this._render() : null;\n    },\n\n    _toggleItemState: function (index) {\n      var items = this.getItems();\n      items[index].done = !items[index].done;\n      this.setItems(items);\n    },\n\n    _render: function () {\n      ReactDOM.render(<TodoList items={this.model.items} itemClickCallback={this._toggleItemState.bind(this)}/>, document.querySelector('[runtime-id=\"' + this.getRuntimeId() + '\"]'));\n    }\n  });\n}());\n"]}